{
  "version": 3,
  "file": "ngu-utility.umd.js",
  "sources": [
    "ng://ngu-utility/out/ngu-utility.module.ts",
    "ng://ngu-utility/out/letter-avatar/ngu-letter-avatar.component.ts",
    "ng://ngu-utility/out/letter-avatar/lameta.ts"
  ],
  "sourcesContent": [
    "import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NguLetterAvatarComponent} from './letter-avatar/ngu-letter-avatar.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [NguLetterAvatarComponent\r\n    ],\r\n    providers: [],\r\n    exports: [NguLetterAvatarComponent]\r\n})\r\nexport class NguUtilityModule { }\r\n",
    "import { Component, ElementRef, AfterViewInit, Input } from \"@angular/core\";\r\n\r\nimport { Attributes, LAmeta } from \"./lameta\";\r\n\r\ndeclare function unescape(x: string): string;\r\n\r\n@Component({\r\n    selector: \"ngu-letter-avatar\",\r\n    template: \"<ng-content></ng-content>\"\r\n})\r\nexport class NguLetterAvatarComponent  {\r\n    private letteravatar: any;\r\n    private imageTag: HTMLElement;\r\n    private _meta: LAmeta = new LAmeta();\r\n    private attribute: Attributes = new Attributes();\r\n\r\n    @Input(\"avatar-alphabet-colors\") alphabetcolors: string[];\r\n    @Input(\"avatar-text-color\") textColor: string;\r\n    @Input(\"avatar-default-border\") defaultBorder: string;\r\n    @Input(\"avatar-triangle-up\") triangleup: string;\r\n    @Input(\"avatar-font-size\") fontsize: string;\r\n    @Input(\"avatar-height\") height: string;\r\n    @Input(\"avatar-width\") width: string;\r\n    @Input(\"avatar-font-weight\") fontWeight: string;\r\n    @Input(\"avatar-font-family\") fontFamily: string;\r\n    base: string = \"data:image/svg+xml;base64,\";\r\n    @Input(\"avatar-radius\") radius: string;\r\n    @Input(\"avatar-dynamic\") dynamic: string;\r\n    @Input(\"avatar-rotate-degree\") rotatedeg: string;\r\n    @Input(\"avatar-char-count\") charCount: string = \"1\";\r\n    @Input(\"avatar-data\") data: string;\r\n    @Input(\"avatar-border-style\") avatarBorderStyle: string;\r\n    @Input(\"avatar-border\") avatarborder: string;\r\n    @Input(\"avatar-custom-border\") avatarcustomborder: string;\r\n    @Input(\"avatar-shape\") shape: string;\r\n    @Input(\"avatar-custom-bg-color\") avatarcustombgcolor: string;\r\n\r\n    constructor(el: ElementRef) {\r\n        this.letteravatar = el.nativeElement;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        if (!this.alphabetcolors) {\r\n            this.alphabetcolors = this.getPropertyValue(this.attribute.alphabetcolors) ?\r\n                this.getPropertyValue(this.attribute.alphabetcolors) : this._meta.defaultColors;\r\n        }\r\n        if (!this.textColor) {\r\n            this.textColor = this.getPropertyValue(this.attribute.textColor) ?\r\n                this.getPropertyValue(this.attribute.textColor) : this._meta.defaultTextColor;\r\n        }\r\n        if(!this.avatarcustombgcolor) {\r\n            this.avatarcustombgcolor = this.getPropertyValue(this.attribute.avatarcustombgcolor);\r\n        }\r\n\r\n        if (!this.avatarborder) {\r\n            this.avatarborder = this.getPropertyValue(this.attribute.avatarborder) ?\r\n                this.getPropertyValue(this.attribute.avatarborder) : this._meta.defaultAvatarborder;\r\n        }\r\n\r\n        if (!this.defaultBorder) {\r\n            this.defaultBorder = this.getPropertyValue(this.attribute.defaultBorder) ?\r\n                this.getPropertyValue(this.attribute.defaultBorder) : this._meta.defaultBorder;\r\n        }\r\n        if (!this.triangleup) {\r\n            this.triangleup = this.getPropertyValue(this.attribute.triangleup) ?\r\n                this.getPropertyValue(this.attribute.triangleup) : this._meta.defaultTriangleup;\r\n        }\r\n        if (!this.fontsize) {\r\n            this.fontsize = this.getPropertyValue(this.attribute.fontsize) ?\r\n                this.getPropertyValue(this.attribute.fontsize) : this._meta.deafultFontsize;\r\n        }\r\n        if (!this.height) {\r\n            this.height = this.getPropertyValue(this.attribute.height) ?\r\n                this.getPropertyValue(this.attribute.height) : this._meta.defaultHeight;\r\n        }\r\n        if (!this.width) {\r\n            this.width = this.getPropertyValue(this.attribute.width) ?\r\n                this.getPropertyValue(this.attribute.width) : this._meta.deafultWidth;\r\n        }\r\n        if (!this.radius) {\r\n            this.radius = this.getPropertyValue(this.attribute.radius) ?\r\n                this.getPropertyValue(this.attribute.radius) : this._meta.defaultRadius;\r\n        }\r\n        if (!this.dynamic) {\r\n            this.dynamic = this.getPropertyValue(this.attribute.dynamic) ?\r\n                this.getPropertyValue(this.attribute.dynamic) : false;\r\n        }\r\n        if (!this.rotatedeg) {\r\n            this.rotatedeg = this.getPropertyValue(this.attribute.rotatedeg) ?\r\n                this.getPropertyValue(this.attribute.rotatedeg) : this._meta.defaultRotatedeg;\r\n        }\r\n        if (!this.fontWeight) {\r\n            this.fontWeight = this.getPropertyValue(this.attribute.fontWeight) ?\r\n                this.getPropertyValue(this.attribute.fontWeight) : this._meta.defaultFontWeight;\r\n        }\r\n        if (!this.fontFamily) {\r\n            this.fontFamily = this.getPropertyValue(this.attribute.fontFamily) ?\r\n                this.getPropertyValue(this.attribute.fontFamily) : this._meta.defaultFontFamily;\r\n        }\r\n        if (!this.shape) {\r\n            this.shape = this.getPropertyValue(this.attribute.shape);\r\n        }\r\n        if (!this.data) {\r\n            this.data = this.getPropertyValue(this.attribute.data);\r\n        }\r\n        this.createAvatar();\r\n    }\r\n    private getPropertyValue(property: string): any {\r\n        let result: any = \"\";\r\n        result = this.letteravatar.getAttribute(property);\r\n        return result;\r\n    }\r\n\r\n    private createAvatar(): void {\r\n        let c: string = \"\";\r\n        if (this.charCount === \"2\") {\r\n            let _data: string = this.getFirstAndLastName(this.data.toUpperCase());\r\n            if (_data) {\r\n                c = _data;\r\n            } else {\r\n                c = this.data.substring(0, +this.charCount).toUpperCase();\r\n            }\r\n        } else {\r\n            c = this.data.substring(0, +this.charCount).toUpperCase();\r\n        }\r\n        let textTag: HTMLElement = this.getCharacterTextTag(c, this.textColor, this.fontFamily, this.fontWeight, this.fontsize);\r\n        let colorIndex: number;\r\n        let color: string = \"\";\r\n\r\n        /**\r\n         * Populate the colors according to attributes\r\n         */\r\n        if (c.charCodeAt(0) < 65) {\r\n            color = this.getRandomColors();\r\n        } else {\r\n            colorIndex = Math.floor((c.charCodeAt(0) - 65) % this.alphabetcolors.length);\r\n            color = this.alphabetcolors[colorIndex];\r\n        }\r\n\r\n        if (this.avatarcustombgcolor) {\r\n            color = this.avatarcustombgcolor;\r\n        }\r\n\r\n        this.createSvg(this.width, this.height, color, textTag);\r\n        let lvcomponent:string = this.getLVText();\r\n        let svgHtml: string = window.btoa(unescape(encodeURIComponent(lvcomponent)));\r\n        let component: string;\r\n        let base: string = this.base;\r\n        let _style: string = \"\";\r\n        if (this.avatarBorderStyle) {\r\n            _style = this.avatarBorderStyle;\r\n        } else if(this.avatarborder === \"true\") {\r\n            _style = this.defaultBorder;\r\n        }\r\n\r\n        if (this.rotatedeg !== \"0\") {\r\n            // tslint:disable-next-line:max-line-length\r\n            _style = \"-ms-transform: rotate(\" + this.rotatedeg + \"deg); -webkit-transform: rotate(\" + this.rotatedeg + \"deg); transform: rotate(\" + this.rotatedeg + \"deg)\";\r\n        }\r\n\r\n        if (this.shape) {\r\n            if (this.shape === \"round\") {\r\n                let round_style: string = this.radius + _style;\r\n                if (this.data.indexOf(\"http\") > -1 || this.data.indexOf(\"data:image\") > -1) {\r\n                    let img_size: string = \"width:\" + this.width + \"px;height:\" + this.height + \"px;\";\r\n                    component = \"<img src=\" + this.data + \" style='\" + img_size + round_style + \"'  />\";\r\n                } else {\r\n                    component = \"<img src=\" + base + svgHtml + \" style='\" + round_style + \"' title='\" + this.data + \"' />\";\r\n                }\r\n            }\r\n        } else {\r\n            if (this.data.indexOf(\"http\") > -1 || this.data.indexOf(\"data:image\") > -1) {\r\n                let img_size: string = \"width:\" + this.width + \"px;height:\" + this.height + \"px;\";\r\n                component = \"<img src=\" + this.data + \" style='\" + img_size + _style + \"'  />\";\r\n            } else {\r\n                component = \"<img src=\" + base + svgHtml + \" style='\" + _style + \"' title='\" + this.data + \"' />\";\r\n            }\r\n        }\r\n\r\n        this.letteravatar.innerHTML = component;\r\n\r\n    }\r\n\r\n    private getLVText(): string {\r\n        let lvTag: HTMLElement = document.createElement(\"div\");\r\n        lvTag.appendChild(this.imageTag.cloneNode());\r\n        return this.imageTag.outerHTML;\r\n    }\r\n\r\n    /**\r\n     * Populate the svg tag which will used for the avatar generation\r\n     * @param width\r\n     * @param height\r\n     * @param color\r\n     * @returns\r\n     */\r\n    private createSvg(width: string, height: string, color: string, cobj: HTMLElement): string {\r\n\r\n        let svgTag: HTMLElement = document.createElement(\"svg\");\r\n        svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\r\n        svgTag.setAttribute(\"pointer-events\", \"none\");\r\n        svgTag.setAttribute(\"width\", width);\r\n        svgTag.setAttribute(\"height\", height);\r\n        svgTag.setAttribute(\"style\", \"background-color:\" + color + \";width:\" + width + \"px\" + \";height:\" + height + \"px\");\r\n        svgTag.appendChild(cobj);\r\n        this.imageTag = svgTag;\r\n\r\n        return svgTag.innerHTML;\r\n    }\r\n\r\n    /**\r\n     *  Generate the Letter tag by using the svg text element\r\n     * @param character\r\n     * @param textColor\r\n     * @param fontFamily\r\n     * @param fontWeight\r\n     * @param fontsize\r\n     * @returns\r\n     */\r\n    // tslint:disable-next-line:max-line-length\r\n    private getCharacterTextTag(character:string, textColor: string, fontFamily: string, fontWeight: string, fontsize: string): HTMLElement {\r\n        let textTag: HTMLElement = document.createElement(\"text\");\r\n        textTag.setAttribute(\"text-anchor\", \"middle\");\r\n        textTag.setAttribute(\"x\", \"50%\");\r\n        textTag.setAttribute(\"y\", \"50%\");\r\n        textTag.setAttribute(\"dy\", \"0.35em\");\r\n        textTag.setAttribute(\"pointer-events\", \"auto\");\r\n        textTag.setAttribute(\"fill\", textColor);\r\n        textTag.setAttribute(\"font-family\", fontFamily);\r\n        textTag.setAttribute(\"style\", \"font-weight:\" + fontWeight + \";font-size:\" + fontsize + \"px\");\r\n        textTag.innerText = character;\r\n        return textTag;\r\n    }\r\n\r\n    /**\r\n     * Get the random colors\r\n     * @returns\r\n     */\r\n    private getRandomColors(): string {\r\n        let letters: string[] = \"0123456789ABCDEF\".split(\"\");\r\n        let _color: string = \"#\";\r\n        for (let i: number = 0; i < 6; i++) {\r\n            _color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return _color;\r\n    }\r\n\r\n    /**\r\n     * get the first name and last name first letters and combined and form the letter avatar\r\n     * @param data\r\n     * @returns\r\n     */\r\n    private getFirstAndLastName(data: string): string {\r\n        let names: string[] = data.split(\" \");\r\n        if (names && names.length >= 2) {\r\n            let firstName: string = names[0];\r\n            let lastName: string = names[1];\r\n            if (firstName && lastName) {\r\n                let text: string = firstName.substr(0, 1) + lastName.substr(0, 1);\r\n                return text;\r\n            } else {\r\n                return data.substr(0, 2);\r\n            }\r\n        }\r\n    }\r\n}",
    "export class LAmeta {\r\n    defaultColors: string[] = [\"#5A8770\", \"#B2B7BB\", \"#6FA9AB\", \"#F5AF29\", \"#0088B9\", \"#F18636\", \"#D93A37\", \"#A6B12E\", \"#5C9BBC\", \"#F5888D\", \"#9A89B5\", \"#407887\", \"#9A89B5\", \"#5A8770\", \"#D33F33\", \"#A2B01F\", \"#F0B126\", \"#0087BF\", \"#F18636\", \"#0087BF\", \"#B2B7BB\", \"#72ACAE\", \"#9C8AB4\", \"#5A8770\", \"#EEB424\", \"#407887\"];\r\n    defaultTextColor: string = '#ffffff';\r\n    defaultBorder: string = 'border:5px solid white';\r\n    defaultTriangleup: string = 'width: 0;height: 0;border-left: 50px solid transparent;border-right: 50px solid transparent;border-bottom: 100px solid;';\r\n    deafultFontsize: string = '30';\r\n    defaultHeight: string = '50';\r\n    deafultWidth: string = '50';\r\n    defaultRadius: string = 'border-radius:50%;';\r\n    deafultDynamic: string = 'false';\r\n    defaultRotatedeg: string = '0';\r\n    defaultAvatarborder:string = 'false';\r\n    defaultFontWeight: string = '400';\r\n    defaultFontFamily: string = 'HelveticaNeue-Light,Helvetica Neue Light,Helvetica Neue,Helvetica, Arial,Lucida Grande, sans-serif';\r\n}\r\n\r\nexport class Attributes {\r\n    alphabetcolors: string = 'avatar-alphabet-colors';\r\n    textColor: string = 'avatar-text-color';\r\n    defaultBorder: string = 'avatar-default-border';\r\n    triangleup: string = 'avatar-triangle-up';\r\n    fontsize: string = 'avatar-font-size';\r\n    height: string = 'avatar-height';\r\n    width: string = 'avatar-width';\r\n    radius: string = 'avatar-radius';\r\n    avatarcustombgcolor: string = 'avatar-custom-bg-color';\r\n    dynamic: string = 'avatar-dynamic';\r\n    fontWeight: string = 'avatar-font-weight';\r\n    fontFamily: string = 'avatar-font-family';\r\n    shape: string = 'avatar-shape';\r\n    data: string = 'avatar-data';\r\n    rotatedeg: string = 'avatar-rotate-degree';\r\n    avatarborder:string = 'avatar-border';\r\n\r\n}\r\n\r\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "Input",
    "ElementRef",
    "Component"
  ],
  "mappings": "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"
}
